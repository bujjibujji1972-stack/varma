'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating creative text based on user prompts.
 *
 * The flow takes a prompt as input and returns a creative text generated by the AI.
 * It exports:
 *   - GenerateCreativeTextInput: The input type for the generateCreativeText function.
 *   - GenerateCreativeTextOutput: The output type for the generateCreativeText function.
 *   - generateCreativeText: The main function to trigger the flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema
const GenerateCreativeTextInputSchema = z.object({
  prompt: z.string().describe('A prompt to inspire creative text generation.'),
});
export type GenerateCreativeTextInput = z.infer<typeof GenerateCreativeTextInputSchema>;

// Define the output schema
const GenerateCreativeTextOutputSchema = z.object({
  creativeText: z.string().describe('The AI-generated creative text.'),
});
export type GenerateCreativeTextOutput = z.infer<typeof GenerateCreativeTextOutputSchema>;

// Define the main function
export async function generateCreativeText(input: GenerateCreativeTextInput): Promise<GenerateCreativeTextOutput> {
  return generateCreativeTextFlow(input);
}

// Define the prompt
const creativeTextPrompt = ai.definePrompt({
  name: 'creativeTextPrompt',
  input: {schema: GenerateCreativeTextInputSchema},
  output: {schema: GenerateCreativeTextOutputSchema},
  prompt: `You are a creative writing assistant. Generate a short story, poem, or other creative text format based on the following prompt:\n\nPrompt: {{{prompt}}}`,
});

// Define the flow
const generateCreativeTextFlow = ai.defineFlow(
  {
    name: 'generateCreativeTextFlow',
    inputSchema: GenerateCreativeTextInputSchema,
    outputSchema: GenerateCreativeTextOutputSchema,
  },
  async input => {
    const {output} = await creativeTextPrompt(input);
    return output!;
  }
);
